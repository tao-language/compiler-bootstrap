# Algebraic Data Type (ADT)

type Maybe a
  = Just a
  | Nothing

maybeToInt : Maybe Int -> Int
maybeToInt (Just x) = x
maybeToInt Nothing = 0

> maybeToInt Nothing    # 0
> maybeToInt (Just 42)  # 42

type List (a : Type)
  = (::) : a -> List a -> List a
  | [] : List a

listToInt : List Int -> Int
listToInt (x :: _) = x
listToInt [] = 0

> listToInt []       # 0
> listToInt [42]     # 42
> listToInt [42, 9]  # 42